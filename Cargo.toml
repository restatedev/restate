[workspace]
members = [
    "cli",
    "crates/*",
    "crates/core/derive",
    "crates/codederror/derive",
    "server",
    "benchmarks",
    "tools/bifrost-benchpress",
    "tools/mock-service-endpoint",
    "tools/restatectl",
    "tools/service-protocol-wireshark-dissector",
    "tools/xtask",
    "workspace-hack",
]
default-members = [
    "cli",
    "crates/*",
    "crates/core/derive",
    "crates/codederror/derive",
    "server",
    "tools/restatectl",
]
resolver = "2"

[workspace.package]
version = "1.1.6"
authors = ["restate.dev"]
edition = "2021"
rust-version = "1.82.0"
license = "BUSL-1.1"
repository = "https://github.com/restatedev/restate"
description = "Restate makes distributed applications easy!"

[workspace.dependencies]
# Own crates
codederror = { path = "crates/codederror" }
mock-service-endpoint = { path = "tools/mock-service-endpoint" }
restate-admin = { path = "crates/admin" }
restate-admin-rest-model = { path = "crates/admin-rest-model" }
restate-base64-util = { path = "crates/base64-util" }
restate-bifrost = { path = "crates/bifrost" }
restate-cli-util = { path = "crates/cli-util" }
restate-core = { path = "crates/core" }
restate-core-derive = { path = "crates/core/derive" }
restate-errors = { path = "crates/errors" }
restate-fs-util = { path = "crates/fs-util" }
restate-futures-util = { path = "crates/futures-util" }
restate-ingress-http = { path = "crates/ingress-http" }
restate-ingress-kafka = { path = "crates/ingress-kafka" }
restate-invoker-api = { path = "crates/invoker-api" }
restate-invoker-impl = { path = "crates/invoker-impl" }
restate-local-cluster-runner = { path = "crates/local-cluster-runner" }
restate-log-server = { path = "crates/log-server" }
restate-metadata-store = { path = "crates/metadata-store" }
restate-node = { path = "crates/node" }
restate-partition-store = { path = "crates/partition-store" }
restate-queue = { path = "crates/queue" }
restate-rocksdb = { path = "crates/rocksdb" }
restate-serde-util = { path = "crates/serde-util" }
restate-server = { path = "server" }
restate-service-client = { path = "crates/service-client" }
restate-service-protocol = { path = "crates/service-protocol" }
restate-service-protocol-v4 = { path = "crates/service-protocol-v4" }
restate-storage-api = { path = "crates/storage-api" }
restate-storage-query-datafusion = { path = "crates/storage-query-datafusion" }
restate-storage-query-postgres = { path = "crates/storage-query-postgres" }
restate-test-util = { path = "crates/test-util" }
restate-timer = { path = "crates/timer" }
restate-timer-queue = { path = "crates/timer-queue" }
restate-tracing-instrumentation = { path = "crates/tracing-instrumentation" }
restate-types = { path = "crates/types" }
restate-utoipa = { path = "crates/utoipa" }
restate-wal-protocol = { path = "crates/wal-protocol" }
restate-worker = { path = "crates/worker" }
restate-web-ui = { path = "crates/web-ui" }

# External crates
ahash = "0.8.5"
anyhow = "1.0.68"
arc-swap = "1.6"
arrow = { version = "53.3.0", default-features = false }
assert2 = "0.3.11"
async-channel = "2.1.1"
async-trait = "0.1.73"
axum = { version = "0.7.5", default-features = false }
aws-config = "1.5.10"
aws-credential-types = "1.2.1"
base64 = "0.22"
bitflags = { version = "2.6.0" }
bytes = { version = "1.7", features = ["serde"] }
bytes-utils = "0.1.3"
bytesize = { version = "1.3.0" }
bytestring = { version = "1.2", features = ["serde"] }
ciborium = { version = "0.2.2" }
chrono = { version = "0.4.38", default-features = false, features = ["clock"] }
comfy-table = { version = "7.1" }
chrono-humanize = { version = "0.2.3" }
clap = { version = "4", default-features = false }
clap-verbosity-flag = { version = "2.0.1" }
cling = { version = "0.1", default-features = false, features = ["derive"] }
criterion = "0.5"
crossterm = { version = "0.27.0" }
dashmap = { version = "6" }
datafusion = { version = "44.0.0", default-features = false, features = [
    "crypto_expressions",
    "encoding_expressions",
    "regex_expressions",
    "unicode_expressions",
] }
datafusion-expr = { version = "44.0.0" }
derive_builder = "0.20.0"
derive_more = { version = "1", features = ["full"] }
dialoguer = { version = "0.11.0" }
downcast-rs = { version = "1.2.1" }
enum-map = { version = "2.7.3" }
enumset = { version = "1.1.3" }
etcd-client = { version = "0.14" }
flexbuffers = { version = "2.0.0" }
futures = "0.3.25"
futures-sink = "0.3.25"
futures-util = "0.3.25"
googletest = { version = "0.10", features = ["anyhow"] }
hostname = { version = "0.4.0" }
http = "1.1.0"
http-body = "1.0.1"
http-body-util = "0.1.2"
http-serde = { version = "2.1.1" }
humantime = "2.1.0"
hyper = { version = "1.4.1", default-features = false }
hyper-rustls = { version = "0.27.2", default-features = false, features = [
    "http1",
    "http2",
    "ring",
    "native-tokio",
    "tls12",
    "logging",
] }
hyper-util = { version = "0.1" }
indexmap = "2.7"
itertools = "0.13.0"
jsonschema = "0.26.0"
metrics = { version = "0.24" }
metrics-tracing-context = { version = "0.17.0" }
metrics-exporter-prometheus = { version = "0.16", default-features = false, features = [
    "async-runtime",
] }
metrics-util = { version = "0.18.0" }
moka = "0.12.5"
object_store = { version = "0.11.1", features = ["aws"] }
opentelemetry = { version = "0.27" }
opentelemetry-contrib = { version = "0.19" }
opentelemetry-otlp = { version = "0.27" }
opentelemetry-semantic-conventions = { version = "0.27" }
opentelemetry_sdk = { version = "0.27" }
parking_lot = { version = "0.12" }
paste = "1.0"
pin-project = "1.0"
pin-project-lite = { version = "0.2" }
prost = { version = "0.13.1" }
prost-build = { version = "0.13.1" }
priority-queue = "2.0.3"
prost-dto = { version = "0.0.3" }
prost-types = { version = "0.13.1" }
rand = "0.8.5"
rayon = { version = "1.10" }
regex = { version = "1.11" }
regress = { version = "0.10" }
reqwest = { version = "0.12.5", default-features = false, features = [
    "json",
    "rustls-tls",
    "stream",
] }
rlimit = { version = "0.10.1" }
rocksdb = { version = "0.29.0", package = "rust-rocksdb", features = ["multi-threaded-cf", "jemalloc"], git = "https://github.com/restatedev/rust-rocksdb", rev = "8f832b7e742e0d826fb9fed05a62e4bd747969bf" }
rstest = "0.23.0"
rustls = { version = "0.23.11", default-features = false, features = ["ring"] }
schemars = { version = "0.8", features = ["bytes", "enumset"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_with = "3.8"
serde_yaml = "0.9"
sha2 = "0.10.8"
smartstring = { version = "1.0.1" }
static_assertions = { version = "1.1.0" }
strum = { version = "0.26.1", features = ["derive"] }
sync_wrapper = "1.0.1"
smallvec = { version = "1.13.2", features = ["serde"] }
tempfile = "3.6.0"
test-log = { version = "0.2.11", default-features = false, features = [
    "trace",
] }
toml = { version = "0.8.12" }
tikv-jemallocator = "0.6"
thiserror = "2.0"
tokio = { version = "1.41.1", default-features = false, features = [
    "rt-multi-thread",
    "signal",
    "macros",
    "parking_lot",
] }
tokio-stream = "0.1.16"
tokio-util = { version = "0.7.12" }
tonic = { version = "0.12.3", default-features = false }
tonic-reflection = { version = "0.12.3" }
tonic-health = { version = "0.12.3" }
tonic-build = { version = "0.12.3" }
tower = "0.4"
tower-http = { version = "0.5.2", default-features = false }
tracing = "0.1"
tracing-opentelemetry = { version = "0.28.0" }
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt", "parking_lot"] }
tracing-test = { version = "0.2.5" }
ulid = { version = "1.1.0" }
url = { version = "2.5" }
uuid = { version = "1.3.0", features = ["v7", "serde"] }
xxhash-rust = { version = "0.8", features = ["xxh3"] }

[profile.release]
opt-level = 3
lto = "thin"
codegen-units = 1
# Let's be defensive and abort on every panic
panic = "abort"

[profile.release-debug]
inherits = "release"
debug = true

[profile.dev]
# Let's be defensive and abort on every panic
panic = "abort"

[profile.release.package.service-protocol-wireshark-dissector]
opt-level = "z" # Optimize for size.
strip = true    # Automatically strip symbols from the binary.

[profile.bench]
# Should be enabled for benchmarking runs; increases binary size
debug = true

[profile.dev.package.tikv-jemalloc-sys]
opt-level = 2


