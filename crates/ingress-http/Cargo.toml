[package]
name = "restate-ingress-http"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
publish = false

[features]
default = []
options_schema = ["dep:schemars"]

[dependencies]
# Restate
restate-core = { workspace = true }
restate-errors = { workspace = true }
restate-serde-util = { workspace = true }
restate-service-protocol = { workspace = true, features = ["awakeable-id"] }
restate-tracing-instrumentation = { workspace = true }
restate-types = { workspace = true }

anyhow = { workspace = true }
assert2 = { workspace = true }
bytes = { workspace = true }
bytestring = { workspace = true }
chrono = { workspace = true }
codederror = { workspace = true }
derive_builder = { workspace = true }
futures = { workspace = true }
http = { workspace = true }
http-body = { workspace = true }
http-body-util = { workspace = true }
humantime = { workspace = true }
hyper = { workspace = true, features = ["server"] }
hyper-util = { workspace = true, features = ["http1", "http2", "server", "tokio", "service"] }
metrics = { workspace = true }
opentelemetry = { workspace = true }
opentelemetry_sdk = { workspace = true }
pin-project-lite = "0.2.13"
schemars = { workspace = true, optional = true }
serde = { workspace = true }
serde_with = { workspace = true }
serde_json = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }
tracing-opentelemetry = { workspace = true }
tokio = { workspace = true }
tower = { workspace = true, features = ["util"] }
tower-http = { workspace = true, features = ["cors", "normalize-path"] }
url = "2.5.0"
urlencoding = "2.1"

[dev-dependencies]
restate-core = { workspace = true, features = ["test-util"] }
restate-test-util = { workspace = true }
restate-types = { workspace = true, features = ["test-util"] }

mockall = "0.13.0"
hyper = { workspace = true, features = ["full"] }
hyper-util = { workspace = true, features = ["full"] }

tracing-test = { workspace = true }
tracing-subscriber = { workspace = true }

googletest = { workspace = true }
