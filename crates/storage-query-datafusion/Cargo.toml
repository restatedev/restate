[package]
name = "restate-storage-query-datafusion"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
publish = false

[features]
default = []
options_schema = ["dep:schemars"]

[dependencies]
restate-storage-rocksdb = { workspace = true }
restate-types = { workspace = true }
restate-schema-api = { workspace = true, features = ["deployment"] }
restate-service-protocol = { workspace = true, features = ["codec"] }
restate-storage-api = { workspace = true }
restate-invoker-api = { workspace = true }

ahash = { workspace = true }                                                    # Required to due a yanked version used by datafusion
async-trait = { workspace = true }
bytes = { workspace = true }
bytestring = { workspace = true }
chrono = { version = "0.4.26", default-features = false, features = ["clock"] }
codederror = { workspace = true }
datafusion = { workspace = true }
datafusion-expr = { workspace = true }
derive_builder = { workspace = true }
futures = { workspace = true }
paste = { workspace = true }
prost = { workspace = true }
schemars = { workspace = true, optional = true }
serde = { workspace = true }
serde_json = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true }
tracing = { workspace = true }

[dev-dependencies]
restate-core = { workspace = true, features = ["test-util"] }
restate-invoker-api = { workspace = true, features = ["mocks"] }
restate-rocksdb = { workspace = true, features = ["test-util"] }
restate-schema-api = { workspace = true, features = ["mocks"] }
restate-storage-api = { workspace = true, features = ["mocks"] }
restate-service-protocol = { workspace = true, features = ["mocks"] }
restate-types = { workspace = true, features = ["test-util"] }

drain = { workspace = true }
googletest = { workspace = true }
