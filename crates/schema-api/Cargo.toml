[package]
name = "restate-schema-api"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
publish = false

[features]
default = []

deployment = ["dep:restate-types", "dep:http", "dep:base64", "dep:restate-base64-util", "dep:bytestring", "component"]
json_conversion = ["dep:prost-reflect", "prost-reflect?/serde", "dep:anyhow", "dep:serde_json"]
json_key_conversion = ["key_extraction", "key_expansion", "dep:serde_json", "dep:thiserror"]
key_expansion = ["dep:bytes", "dep:thiserror", "dep:prost", "dep:prost-reflect", "dep:anyhow"]
key_extraction = ["dep:bytes", "dep:thiserror", "dep:anyhow", "dep:prost"]
mocks = []
proto_symbol = ["dep:bytes"]
serde = ["dep:serde", "dep:serde_with", "restate-types?/serde", "dep:restate-serde-util"]
serde_schema = ["serde", "dep:schemars", "restate-types?/serde_schema", "restate-serde-util?/schema"]
service = ["dep:bytes", "dep:restate-types"]
component = ["dep:bytes", "dep:restate-types"]
subscription = ["dep:anyhow", "dep:restate-types"]

[dependencies]
restate-base64-util = { workspace = true, optional = true }
restate-serde-util = { workspace = true, optional = true }
restate-types = { workspace = true, optional = true }

anyhow = { workspace = true, optional = true }
base64 = { workspace = true, optional = true }
bytes = { workspace = true, optional = true }
bytestring = { workspace = true, optional = true }
http = { workspace = true, optional = true }
prost = { workspace = true, optional = true }
prost-reflect = { workspace = true, optional = true }
schemars = { workspace = true, optional = true }
serde = { workspace = true, optional = true }
serde_json = { workspace = true, optional = true }
serde_with = { workspace = true, optional = true }
thiserror = { workspace = true, optional = true }
