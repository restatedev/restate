[package]
name = "restate-invoker-impl"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
publish = false

[features]
default = []
options_schema = ["dep:schemars", "restate-types/schemars"]

[dependencies]
workspace-hack = { version = "0.1", path = "../../workspace-hack" }

restate-core = { workspace = true }
restate-errors = { workspace = true }
restate-futures-util = { workspace = true }
restate-invoker-api = { workspace = true }
restate-queue = { workspace = true }
restate-service-client = { workspace = true }
restate-service-protocol = { workspace = true, features = ["message"] }
restate-service-protocol-v4 = { workspace = true, features = ["message-codec", "entry-codec"] }
restate-timer-queue = { workspace = true }
restate-types = { workspace = true }

anyhow = { workspace = true }
assert2 = { workspace = true }
bytes = { workspace = true }
bytestring = { workspace = true }
codederror = { workspace = true }
futures = { workspace = true }
humantime = { workspace = true }

http = { workspace = true }
http-body = { workspace = true }
http-body-util = { workspace = true }
tokio-stream = { workspace = true }

itertools = { workspace = true }
metrics = { workspace = true }
opentelemetry = { workspace = true }
schemars = { workspace = true, optional = true }
serde = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true }
tracing = { workspace = true }

[dev-dependencies]
restate-core = { workspace = true, features = ["test-util"] }
restate-invoker-api = { workspace = true, features = ["test-util"] }
restate-service-protocol = { workspace = true, features = ["codec"] }
restate-test-util = { workspace = true }
restate-types = { workspace = true }

googletest = { workspace = true }
serde_json = { workspace = true }
tempfile = { workspace = true }
test-log = { workspace = true }
tokio-util = { workspace = true }
