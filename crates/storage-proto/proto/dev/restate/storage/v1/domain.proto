syntax = "proto3";

import "google/protobuf/empty.proto";

package dev.restate.storage.domain.v1;

// ---------------------------------------------------------------------
// Common
// ---------------------------------------------------------------------

message InvocationTarget {
    enum Ty {
        UNKNOWN_TY = 0;
        SERVICE = 1;
        VIRTUAL_OBJECT = 2;
    }

    enum HandlerType {
        UNKNOWN_HANDLER_TYPE = 0;
        EXCLUSIVE = 1;
        SHARED = 2;
    }

    Ty ty = 1;
    bytes name = 2;
    bytes handler = 3;
    bytes key = 4;
    HandlerType handler_ty = 5;
}

message ServiceId {
    bytes service_name = 1;
    bytes service_key = 2;
}

message FullInvocationId {
    bytes service_name = 1;
    bytes service_key = 2;
    bytes invocation_uuid = 3;
}

message GenerationalNodeId {
    uint32 id = 1;
    uint32 generation = 2;
}

message KvPair {
    bytes key = 1;
    bytes value = 2;
}

message Duration {
    uint64 secs = 1;
    uint32 nanos = 2;
}

// ---------------------------------------------------------------------
// Service Invocation
// ---------------------------------------------------------------------

message JournalMeta {
    uint32 length = 1;
    SpanContext span_context = 2;
}

message Source {
    oneof source {
        google.protobuf.Empty ingress = 9;
        FullInvocationId service = 10;
        google.protobuf.Empty internal = 11;
    }
}

message InvocationStatus {

    message Invoked {
        InvocationTarget invocation_target = 1;
        JournalMeta journal_meta = 2;
        repeated ServiceInvocationResponseSink response_sinks = 3;
        uint64 creation_time = 4;
        uint64 modification_time = 5;
        bytes method_name = 6;
        oneof deployment_id {
            google.protobuf.Empty none = 7;
            string value = 8;
        }
        Source source = 9;
        Duration completion_retention_time = 10;
        oneof idempotency_key {
            google.protobuf.Empty idempotency_key_none = 11;
            string idempotency_key_value = 12;
        }

        // TODO remove
        ServiceId service_id = 16;
    }

    message Suspended {
        InvocationTarget invocation_target = 1;
        JournalMeta journal_meta = 2;
        repeated ServiceInvocationResponseSink response_sinks = 3;
        uint64 creation_time = 4;
        uint64 modification_time = 5;
        repeated uint32 waiting_for_completed_entries = 6;
        bytes method_name = 7;
        oneof deployment_id {
            google.protobuf.Empty none = 8;
            string value = 9;
        }
        Source source = 10;
        Duration completion_retention_time = 11;
        oneof idempotency_key {
            google.protobuf.Empty idempotency_key_none = 12;
            string idempotency_key_value = 13;
        }

        // TODO remove
        ServiceId service_id = 16;
    }

    message Completed {
        InvocationTarget invocation_target = 1;
        ResponseResult result = 2;

        // TODO remove
        ServiceId service_id = 3;
        bytes handler_name = 4;

        oneof idempotency_key {
            google.protobuf.Empty idempotency_key_none = 12;
            string idempotency_key_value = 13;
        }
    }

    message Free {
    }

    message Inboxed {
        InvocationTarget invocation_target = 1;

        uint64 inbox_sequence_number = 2;
        repeated ServiceInvocationResponseSink response_sinks = 3;
        uint64 creation_time = 4;
        uint64 modification_time = 5;

        bytes argument = 7;
        Source source = 8;
        SpanContext span_context = 9;
        repeated Header headers = 10;
        uint64 execution_time = 11;
        IdempotentRequestMetadata idempotency = 12;

        // TODO remove these
        ServiceId service_id = 13;
        bytes handler = 14;
    }

    oneof status {
        Invoked invoked = 1;
        Suspended suspended = 2;
        Free free = 3;
        Completed completed = 4;
        Inboxed inboxed = 5;
    }
}

message ServiceStatus {
    message Locked {
        bytes invocation_uuid = 1;
    }

    oneof status {
        Locked locked = 1;
    }
}

message ServiceInvocationResponseSink {

    message PartitionProcessor {
        bytes caller = 1;
        uint32 entry_index = 2;
    }

    message NewInvocation {
        FullInvocationId target = 1;
        string method = 2;
        bytes caller_context = 3;
    }

    message Ingress {
        GenerationalNodeId node_id = 1;
    }

    message None {
    }

    oneof response_sink {
        None none = 1;
        PartitionProcessor partition_processor = 2;
        Ingress ingress = 3;
        NewInvocation new_invocation = 4;
    }
}

message SpanContext {
    bytes trace_id = 1;
    uint64 span_id = 2;
    uint32 trace_flags = 3;
    bool is_remote = 4;
    string trace_state = 5;
    optional SpanRelation span_relation = 6;
}

message SpanRelation {
    message Parent {
        uint64 span_id = 1;
    }

    message Linked {
        bytes trace_id = 1;
        uint64 span_id = 2;
    }

    oneof kind {
        Parent parent = 1;
        Linked linked = 2;
    }
}

message Header {
    string name = 1;
    string value = 2;
}

message ServiceInvocation {
    FullInvocationId id = 1;
    bytes method_name = 2;
    bytes argument = 3;
    ServiceInvocationResponseSink response_sink = 4;
    SpanContext span_context = 5;
    Source source = 6;
    repeated Header headers = 7;
    uint64 execution_time = 8;
    IdempotentRequestMetadata idempotency = 9;

    bytes invocation_id = 10;
    InvocationTarget invocation_target = 11;
}

message StateMutation {
    ServiceId service_id = 1;
    optional string version = 2;
    repeated KvPair kv_pairs = 3;
}

message InboxEntry {
    oneof entry {
        FullInvocationId invocation_id = 3;
        StateMutation state_mutation = 4;
    }
}

message InvocationResolutionResult {
    message Success {
        bytes invocation_id = 5;
        InvocationTarget invocation_target = 6;
        bytes service_key = 2;
        SpanContext span_context = 3;
    }

    oneof result {
        google.protobuf.Empty none = 1;
        Success success = 2;
    }
}

message BackgroundCallResolutionResult {
    bytes invocation_id = 5;
    InvocationTarget invocation_target = 6;
    bytes service_key = 2;
    SpanContext span_context = 3;
}
message EnrichedEntryHeader {

    message Input {
    }

    message Output {
    }

    message GetState {
        bool is_completed = 1;
    }

    message SetState {
    }

    message ClearState {
    }

    message GetStateKeys {
        bool is_completed = 1;
    }

    message ClearAllState {
    }

    message Sleep {
        bool is_completed = 1;
    }

    message Invoke {
        bool is_completed = 1;
        InvocationResolutionResult resolution_result = 2;
    }

    message BackgroundCall {
        BackgroundCallResolutionResult resolution_result = 1;
    }

    message Awakeable {
        bool is_completed = 1;
    }

    message CompleteAwakeable {
        bytes invocation_id = 1;
        uint32 entry_index = 2;
    }

    message Custom {
        uint32 code = 1;
    }

    oneof kind {
        Input input = 1;
        Output output = 2;
        GetState get_state = 3;
        SetState set_state = 4;
        ClearState clear_state = 5;
        ClearAllState clear_all_state = 12;
        GetStateKeys get_state_keys = 13;
        Sleep sleep = 6;
        Invoke invoke = 7;
        BackgroundCall background_call = 8;
        Awakeable awakeable = 9;
        CompleteAwakeable complete_awakeable = 10;
        Custom custom = 11;
    }
}

message JournalEntry {

    message Entry {
        EnrichedEntryHeader header = 1;
        bytes raw_entry = 2;
    }

    message CompletionResult {
        message Empty {
        }

        message Success {
            bytes value = 1;
        }

        message Failure {
            uint32 error_code = 1;
            bytes message = 2;
        }

        oneof result {
            Empty empty = 2;
            Success success = 3;
            Failure failure = 4;
        }
    }

    oneof kind {
        Entry entry = 1;
        CompletionResult completion_result = 2;
    }
}



message ResponseResult {
    message ResponseSuccess {
        bytes value = 1;
    }

    message ResponseFailure {
        uint32 failure_code = 1;
        bytes failure_message = 2;
    }

    oneof response_result {
        ResponseSuccess response_success = 1;
        ResponseFailure response_failure = 2;
    }
}

// ---------------------------------------------------------------------
// Outbox
// ---------------------------------------------------------------------

message OutboxMessage {
    // removed OutboxIngressResponse variant
    reserved 3;

    message OutboxServiceInvocation {
        ServiceInvocation service_invocation = 1;
    }

    message OutboxServiceInvocationResponse {
        bytes invocation_id = 1;
        uint32 entry_index = 2;
        ResponseResult response_result = 3;
    }

    message OutboxIngressResponse {
        FullInvocationId full_invocation_id = 1;
        GenerationalNodeId ingress_node_id = 2;
        ResponseResult response_result = 3;
    }

    message OutboxKill {
        bytes invocation_id = 1;
    }

    message OutboxCancel {
        bytes invocation_id = 1;
    }

    oneof outbox_message {
        OutboxServiceInvocation service_invocation_case = 1;
        OutboxServiceInvocationResponse service_invocation_response = 2;
        OutboxKill kill = 4;
        OutboxCancel cancel = 5;
    }

}

// ---------------------------------------------------------------------
// Timer
// ---------------------------------------------------------------------

message Timer {

    message CompleteSleepEntry {
        uint64 partition_key = 1;
    }

    message CleanInvocationStatus {
        bytes invocation_id = 1;
    }

    oneof value {
        CompleteSleepEntry complete_sleep_entry = 100;
        ServiceInvocation invoke = 101;
        CleanInvocationStatus clean_invocation_status = 102;
    }
}

message SequencedTimer {
    uint64 seq_number = 1;
    Timer timer = 2;
}

// ---------------------------------------------------------------------
// Deduplication
// ---------------------------------------------------------------------

// Sequence number which is prefixed by the epoch of the producer. Epoch sequence
// numbers sort lexicographically based on (leader_epoch, sequence_number).
message EpochSequenceNumber {
    uint64 leader_epoch = 1;
    uint64 sequence_number = 2;
}

// Sequence number which is used for deduplicating incoming messages.
message DedupSequenceNumber {
    oneof variant {
        // Variant which is used for deduplicating messages across epoch/leadership changes
        uint64 sequence_number = 1;
        // Variant which is used for guarding against messages from previous epochs/leaders
        EpochSequenceNumber epoch_sequence_number = 2;
    }
}

// ---------------------------------------------------------------------
// Idempotency
// ---------------------------------------------------------------------

message IdempotencyMetadata {
    bytes invocation_id = 1;
}

message IdempotentRequestMetadata {
    string key = 1;
    Duration retention = 2;
}