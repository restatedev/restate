[package]
name = "restate-core"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
publish = false

[features]
default = []
test-util = ["restate-core-derive", "restate-types/test-util", "tokio/test-util", "dep:tempfile"]
options_schema = ["dep:schemars"]
clap = ["dep:clap", "restate-types/clap"]

[dependencies]
workspace-hack = { version = "0.1", path = "../../workspace-hack" }

restate-errors = { workspace = true }
restate-types = { workspace = true }
restate-core-derive = { workspace = true, optional = true }

ahash = { workspace = true }
anyhow = { workspace = true }
arc-swap = { workspace = true }
assert2 = { workspace = true }
async-trait = { workspace = true }
axum = { workspace = true, default-features = false }
bytes = { workspace = true }
bytestring = { workspace = true }
ciborium = { workspace = true}
clap = { workspace = true, features = ["std", "derive", "env"], optional = true }
codederror = { workspace = true }
dashmap = { workspace = true }
derive_builder = { workspace = true }
derive_more = { workspace = true }
enum-map = { workspace = true }
enumset = { workspace = true }
etcd-client = { workspace = true }
figment = { version = "0.10.8", features = ["env", "toml"] }
futures = { workspace = true }
hostname = { workspace = true }
http = { workspace = true }
http-body = { workspace = true }
http-body-util = { workspace = true }
humantime = { workspace = true }
hyper = { workspace = true }
hyper-util = { workspace = true, features = ["server-graceful", "server"] }
metrics = { workspace = true }
notify = { version = "7.0.0" }
notify-debouncer-full = { version = "0.4" }
opentelemetry = { workspace = true }
object_store = { workspace = true, features = ["aws"] }
parking_lot = { workspace = true }
pin-project-lite = { workspace = true }
prost = { workspace = true }
prost-types = { workspace = true }
rand = { workspace = true }
schemars = { workspace = true, optional = true }
serde = { workspace = true }
serde_with = { workspace = true }
static_assertions = { workspace = true }
strum = { workspace = true }
tempfile = { workspace = true, optional = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["tracing"] }
tokio-stream = { workspace = true, features = ["net"] }
tokio-util = { workspace = true, features = ["net"] }
toml = { workspace = true }
tonic = { workspace = true, features = [ "transport", "codegen", "prost", "gzip", ] }
tonic-reflection = { workspace = true }
tower = { workspace = true }
tower-http = { workspace = true, features = ["trace"] }
tracing = { workspace = true }
tracing-opentelemetry = { workspace = true }
xxhash-rust = { workspace = true }

[build-dependencies]
tonic-build = { workspace = true }

[dev-dependencies]
restate-test-util = { workspace = true }
restate-types = { workspace = true, features = ["test-util"] }
restate-core-derive = { workspace = true }

googletest = { workspace = true }
tempfile = { workspace = true }
test-log = { workspace = true }
tokio = { workspace = true, features = ["test-util"] }
tracing-subscriber = { workspace = true }
tracing-test = { workspace = true }
