[package]
name = "restate-service-protocol"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
publish = false

[features]
default = []

awakeable-id = ["dep:base64", "dep:restate-base64-util", "dep:restate-types", "dep:thiserror"]
codec = ["protocol", "dep:restate-types", "dep:thiserror", "dep:paste"]
discovery = ["dep:tracing", "dep:thiserror", "dep:codederror", "dep:restate-errors", "dep:restate-schema-api", "dep:hyper", "dep:restate-service-client", "dep:prost-reflect", "dep:restate-types", "dep:tokio"]
message = ["protocol", "dep:restate-types", "dep:bytes-utils", "dep:codederror", "dep:restate-errors", "dep:size", "dep:tracing"]
mocks = ["awakeable-id"]
protocol = []

[dependencies]
restate-base64-util = { workspace = true, optional = true }
restate-errors = { workspace = true, optional = true }
restate-schema-api = { workspace = true, optional = true, features = ["endpoint"] }
restate-service-client =  { workspace = true, optional = true }
restate-types = { workspace = true, optional = true }

base64 = { workspace = true, optional = true }
bytes = { workspace = true }
bytes-utils = { workspace = true, optional = true }
codederror = { workspace = true, optional = true }
hyper = { workspace = true, features = ["http1", "http2", "client", "tcp", "runtime"], optional = true }
paste = { workspace = true, optional = true }
prost = { workspace = true }
prost-reflect = { workspace = true, optional = true }
prost-types = { workspace = true }
size = { version = "0.4.1", optional = true }
thiserror = { workspace = true, optional = true }
tokio = { workspace = true, optional = true, features = ["time"] }
tracing = { workspace = true, optional = true }

[dev-dependencies]
restate-test-util = { workspace = true }

tokio = { workspace = true }
tracing-subscriber = { workspace = true }
uuid = { workspace = true }

[build-dependencies]
prost-build = { workspace = true }
