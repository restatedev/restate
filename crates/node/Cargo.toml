[package]
name = "restate-node"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
publish = false

[features]
default = []
options_schema = [
    "dep:schemars",
    "restate-admin/options_schema",
    "restate-meta/options_schema",
    "restate-worker/options_schema",
    "restate-cluster-controller/options_schema"]

[dependencies]

restate-admin = { workspace = true }
restate-bifrost = { workspace = true }
restate-cluster-controller = { workspace = true }
restate-errors = { workspace = true }
restate-meta = { workspace = true }
restate-node-services = { workspace = true }
restate-schema-api = { workspace = true }
restate-schema-impl = { workspace = true }
restate-storage-query-datafusion = { workspace = true }
restate-storage-rocksdb = { workspace = true }
restate-types = { workspace = true }
restate-worker = { workspace = true }
restate-worker-api = { workspace = true }

arrow-flight = { workspace = true }
async-trait = { workspace = true }
axum = { workspace = true }
codederror = { workspace = true }
datafusion = { workspace = true }
derive_builder = { workspace = true }
drain = { workspace = true }
enumset = { workspace = true }
futures = { workspace = true }
http = { workspace = true }
humantime = { workspace = true }
hyper = { workspace = true, features = ["full"] }
metrics = { workspace = true }
metrics-exporter-prometheus = { version = "0.13", default-features = false, features = ["async-runtime"] }
metrics-tracing-context = { version = "0.15.0" }
metrics-util = { version = "0.16.0" }
rocksdb = { workspace = true }
schemars = { workspace = true, optional = true }
serde = { workspace = true }
bincode = { workspace = true }
serde_json = { workspace = true }
serde_with = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true }
tonic = { workspace = true }
tonic-reflection = { workspace = true }
tower = { workspace = true }
tower-http = { workspace = true, features = ["trace"] }
tracing = { workspace = true }