// Copyright (c) 2024 - Restate Software, Inc., Restate GmbH
//
// This file is part of the Restate service protocol, which is
// released under the MIT license.
//
// You can find a copy of the license in file LICENSE in the root
// directory of this repository or package, or at
// https://github.com/restatedev/proto/blob/main/LICENSE

syntax = "proto3";

import "restate/common.proto";
import "restate/cluster.proto";
import "google/protobuf/empty.proto";

package restate.cluster_ctrl;

service ClusterCtrlSvc {
  rpc GetClusterState(ClusterStateRequest) returns (ClusterStateResponse);

  rpc ListLogs(ListLogsRequest) returns (ListLogsResponse);

  rpc DescribeLog(DescribeLogRequest) returns (DescribeLogResponse);

  rpc ListNodes(ListNodesRequest) returns (ListNodesResponse);

  rpc TrimLog(TrimLogRequest) returns (google.protobuf.Empty);

  rpc CreatePartitionSnapshot(CreatePartitionSnapshotRequest)
      returns (CreatePartitionSnapshotResponse);

  rpc SealAndExtendChain(SealAndExtendChainRequest)
      returns (SealAndExtendChainResponse);
}

message ClusterStateRequest {}

message ClusterStateResponse { restate.cluster.ClusterState cluster_state = 1; }

message ListLogsRequest {}

message ListLogsResponse {
  // Serialized restate_types::logs::metadata::Logs
  bytes logs = 1;
}

enum TailState {
  TailState_UNKNOWN = 0;
  OPEN = 1;
  SEALED = 2;
}

message DescribeLogRequest { uint32 log_id = 1; }

message DescribeLogResponse {
  uint32 log_id = 5;
  uint32 logs_version = 6;
  // Serialized restate_types::logs::metadata::Chain
  bytes chain = 1;
  TailState tail_state = 2;
  uint64 tail_offset = 3;
  uint64 trim_point = 4;
  // Serialized restate_types::nodes_config::NodesConfiguration
  bytes nodes_configuration = 7;
}

message ListNodesRequest {}

message ListNodesResponse {
  // Serialized restate_types::nodes_config::NodesConfiguration
  bytes nodes_configuration = 1;
}

message TrimLogRequest {
  uint32 log_id = 1;
  uint64 trim_point = 2;
}

message CreatePartitionSnapshotRequest { uint32 partition_id = 1; }

message CreatePartitionSnapshotResponse { string snapshot_id = 1; }

message SealAndExtendChainRequest {
  uint32 log_id = 1;
  // segment_index will be automatically selected (to the index of last segment)
  // if not set.
  optional uint32 segment_index = 2;
  restate.common.Version min_version = 3;
  // check `ProviderKind` for possible values.
  string provider = 4;
  string params = 5;
}

message SealAndExtendChainResponse {}