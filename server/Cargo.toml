[package]
name = "restate-server"
version.workspace = true
authors.workspace = true
edition.workspace = true
repository.workspace = true
homepage.workspace = true
rust-version.workspace = true
license.workspace = true
publish = false
description = "Restate Server"
build = "build.rs"

[package.metadata.dist]
dist = true

[features]
default = ["no-trace-logging"]
console = [
    "tokio/full",
    "tokio/tracing",
    "restate-tracing-instrumentation/console-subscriber",
]
options_schema = [
    "dep:schemars",
    "restate-node/options_schema",
    "restate-tracing-instrumentation/options_schema",
    "restate-types/schemars",
]
memory-loglet = ["restate-node/memory-loglet"]
no-trace-logging = ["tracing/max_level_trace", "tracing/release_max_level_debug"]
metadata-api = ["restate-admin/metadata-api"]

[dependencies]
restate-workspace-hack = { workspace = true }

restate-bifrost = { workspace = true }
restate-core = { workspace = true }
restate-errors = { workspace = true }
restate-metadata-server = { workspace = true }
restate-node = { workspace = true }
restate-rocksdb = { workspace = true }
restate-service-client = { workspace = true }
restate-tracing-instrumentation = { workspace = true, features = ["rt-tokio", "prometheus"] }
restate-types = { workspace = true, features = ["clap"] }
restate-admin = { workspace = true }

clap = { workspace = true, features = ["derive", "env", "color", "help", "wrap_help", "usage", "suggestions", "error-context", "std"] }
codederror = { workspace = true }
enumset = { workspace = true }
futures-util = { workspace = true }
http = { workspace = true }
http-body-util = { workspace = true }
octocrab = { version = "0.44.0", features = ["stream"] }
regex = "1.10.4"
rlimit = { workspace = true }
rustls = { workspace = true, features = ["aws-lc-rs"] }
schemars = { workspace = true, optional = true }
tokio = { workspace = true }
tokio-util = { workspace = true }
tracing = { workspace = true }
tracing-panic = { version = "0.1.2" }
ulid = { workspace = true }
url = { version = "2.5.4", features = [] }

[dev-dependencies]
restate-bifrost = { workspace = true, features = ["test-util"] }
restate-core = { workspace = true, features = ["test-util"] }
restate-local-cluster-runner = { workspace = true }
restate-metadata-server = { workspace = true, features = ["test-util"] }
restate-metadata-store = { workspace = true, features = ["test-util"] }
restate-metadata-providers = { workspace = true, features = ["replicated"] }
restate-node = { workspace = true, features = ["memory-loglet"] }
restate-test-util = { workspace = true }
restate-types = { workspace = true, features = ["test-util"] }
mock-service-endpoint = { workspace = true }

anyhow = { workspace = true }
async-trait = { workspace = true }
bytes = { workspace = true }
bytestring = { workspace = true}
googletest = { workspace = true }
hyper-util = { workspace = true }
tempfile = { workspace = true }
test-log = { workspace = true }
tonic = { workspace = true, features = ["transport", "prost"] }
tower = { workspace = true }
tracing-subscriber = { workspace = true }
rand = { workspace = true }
reqwest = { workspace = true }
serde_json = { workspace = true }
url = { workspace = true }

[target.'cfg(not(target_env = "msvc"))'.dependencies]
tikv-jemallocator = { workspace = true }

[build-dependencies]
vergen = { version = "8.0.0", default-features = false, features = [
    "build",
    "git",
    "gitcl",
    "cargo",
] }