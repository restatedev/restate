name: Build Docker image

on:
  workflow_call:
    inputs:
      artifactInsteadOfPush:
        description: 'skip pushing docker image and build an artifact instead'
        required: false
        default: false
        type: boolean
      platforms:
        description: 'platforms for docker build step'
        required: false
        default: ''
        type: string

  workflow_dispatch:

env:
  REGISTRY: 'ghcr.io'
  REPOSITORY: ${{ github.repository_owner }}
  REGISTRY_USERNAME: ${{ github.actor }}
  REGISTRY_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    timeout-minutes: 70

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup caching
      - name: Set up QEMU dependency
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_TOKEN }}

      - name: Extract image name
        # Set repository name as image name
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}
          # Note: We need this to generate the latest tag until we have a first stable release.
          # Check https://github.com/docker/metadata-action/issues/34
          flavor: |
            latest=true
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Build${{inputs.artifactInsteadOfPush != true && ' and push ' || ' '}}Docker image
        id: build
        uses: docker/build-push-action@v3
        with:
          context: .
          file: "docker/Dockerfile"
          push: ${{ inputs.artifactInsteadOfPush != true }}
          tags: ${{ steps.meta.outputs.tags }}
          load: ${{ inputs.artifactInsteadOfPush == true }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ inputs.platforms || 'linux/arm64,linux/amd64' }}
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,mode=max,scope=${{ github.workflow }}

      - name: Save docker image as tar
        if: ${{ inputs.artifactInsteadOfPush }}
        run: |
          docker save -o restate.tar ${{ steps.build.outputs.imageid }}

      - name: Upload docker image tar as artifact
        if: ${{ inputs.artifactInsteadOfPush }}
        uses: actions/upload-artifact@v3
        with:
          name: restate.tar
          path: restate.tar
          retention-days: 1
          if-no-files-found: error
