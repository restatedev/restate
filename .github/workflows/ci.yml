name: CI

on:
  pull_request:
  workflow_call:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: Build and test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      packages: read
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        #os: [ubuntu-22.04, macos-latest] # 1 macos-latest minute counts as 10 minutes --> quite expensive :-(
        os: [ubuntu-22.04]
    env:
      RUST_BACKTRACE: full
    steps:
      - name: Clean up Github actions runner
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: true
          swap-storage: false

      - name: Install liburing
        run: sudo apt-get install -y liburing-dev

      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
          rustflags: ""

      - name: Install protoc
        uses: ./.github/actions/install-protoc

      - name: Install nextest
        uses: taiki-e/install-action@nextest

      - name: Setup just
        uses: extractions/setup-just@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Cargo.lock file is updated
        run: cargo update -w --locked

      - name: Run verify
        run: just verify

  docker:
    name: Create docker image
    uses: ./.github/workflows/docker.yml
    with:
      uploadImageAsTarball: true
      platforms: linux/amd64

  sdk-java:
    name: Run SDK-Java integration tests
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
      actions: read
    secrets: inherit
    needs: docker
    uses: restatedev/sdk-java/.github/workflows/integration.yaml@main
    with:
      restateCommit: ${{ github.event.pull_request.head.sha || github.sha }}

  sdk-python:
    name: Run SDK-Python integration tests
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
      actions: read
    secrets: inherit
    needs: docker
    uses: restatedev/sdk-python/.github/workflows/integration.yaml@main
    with:
      restateCommit: ${{ github.event.pull_request.head.sha || github.sha }}

  sdk-go:
    name: Run SDK-Go integration tests
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
      actions: read
    secrets: inherit
    needs: docker
    uses: restatedev/sdk-go/.github/workflows/integration.yaml@main
    with:
      restateCommit: ${{ github.event.pull_request.head.sha || github.sha }}

  sdk-typescript:
    name: Run SDK-Typescript integration tests
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
      actions: read
    secrets: inherit
    needs: docker
    uses: restatedev/sdk-typescript/.github/workflows/integration.yaml@main
    with:
      restateCommit: ${{ github.event.pull_request.head.sha || github.sha }}

  e2e:
    name: Run e2e tests
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
      actions: read
    secrets: inherit
    needs: docker
    uses: restatedev/e2e/.github/workflows/e2e.yaml@main
    with:
      restateCommit: ${{ github.event.pull_request.head.sha || github.sha }}
      e2eRef: main
