name: CI

on:
  pull_request:
  workflow_call:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  lint-build-and-test:
    name: Lint, build and test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    strategy:
      fail-fast: false
      matrix:
        #os: [ubuntu-latest, macos-latest] # 1 macos-latest minute counts as 10 minutes --> quite expensive :-(
        os: [ubuntu-latest]
    env:
      RUST_BACKTRACE: full
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
    services:
      verifier:
        image: ghcr.io/restatedev/restate-verification:latest
        ports:
          - "8000:8000"
        options: >-
          --health-cmd "curl --http2-prior-knowledge 127.0.0.1:8000/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3

      - uses: ./.github/actions/clean-runner

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          # need to provide a toolchain version because this action cannot read rust-toolchain.toml. See https://github.com/actions-rs/toolchain/issues/126
          toolchain: stable

      - name: Install protoc
        uses: ./.github/actions/install-protoc

      - name: Setup just
        uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Cache Rust
        uses: Swatinem/rust-cache@v2

      - name: Run fmt
        run: just check-fmt

      - name: Run clippy
        run: just clippy

      - name: Run tests
        run: just test

      - name: Run verification test
        run: just verification-test
        env:
          TMPDIR: ${{ runner.temp }}
          RUST_LOG: "info"

  e2e-test:
    name: Run e2e test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - name: Checkout Restate runtime
        uses: actions/checkout@v3
        with:
          path: restate

      - name: Checkout E2E
        uses: actions/checkout@v3
        with:
          repository: 'restatedev/e2e'
          path: e2e
          ref: main

      - name: Set up QEMU dependency for docker caching
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Install protoc
        uses: ./restate/.github/actions/install-protoc

      - name: Setup just
        uses: extractions/setup-just@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: "https://npm.pkg.github.com"

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: 'ghcr.io'
          username: ${{ secrets.GH_PACKAGE_READ_ACCESS_USER }}
          password: ${{ secrets.GH_PACKAGE_READ_ACCESS_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: localhost/restatedev/restate

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        id: build
        with:
          context: restate
          file: "restate/docker/Dockerfile"
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # Run tests
      - name: Test
        uses: gradle/gradle-build-action@v2
        env:
          GH_PACKAGE_READ_ACCESS_USER: ${{ github.actor }}
          GH_PACKAGE_READ_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RESTATE_RUNTIME_CONTAINER: ${{ steps.build.outputs.imageID }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          arguments: -Djib.console=plain build
          build-root-directory: e2e

      # Upload container logs
      - uses: actions/upload-artifact@v3
        if: always() # Make sure this is run even when test fails
        with:
          name: e2e-container-logs
          path: |
            tests/build/test-results/*/container-logs/**
            tests/build/reports/tests/**
            tests/build/test-results/*/*.xml
