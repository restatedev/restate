/*
  This package provides interfaces for built-in services
 */
syntax = "proto3";

package dev.restate;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

option java_multiple_files = true;
option java_package = "dev.restate.generated";
option go_package = "restate.dev/sdk-go/pb";

service Ingress {
  // Invoke a service and don't wait for the response.
  // It is guaranteed that the service will be invoked after this method returns.
  rpc Invoke(InvokeRequest) returns (InvokeResponse);
}

message InvokeRequest {
  // Fully qualified name of the service, e.g. `counter.Counter`
  string service = 1;
  // Method name of the service to invoke, e.g. `Add`
  string method = 2;
  // Argument of the invocation.
  // When executing requests to the ingress using Protobuf,
  // this field must contain the serialized Protobuf matching the argument type of the target method.
  // When executing requests to the ingress using JSON,
  // this field must contain the JSON object representing the argument type of the target method.
  bytes argument = 3;
}

message InvokeResponse {
  // Generated unique invocation identifier.
  // It can be used to retrieve the status of the invocation and cancel it.
  string id = 1;
}

service Awakeables {
  // Resolve an Awakeable with a result value.
  rpc Resolve(ResolveAwakeableRequest) returns (google.protobuf.Empty);
  // Reject an Awakeable with a reason.
  rpc Reject(RejectAwakeableRequest) returns (google.protobuf.Empty);
}

message ResolveAwakeableRequest {
  // Base64 encoded identifier of the Awakeable to resolve.
  string id = 1;

  oneof result {
    bytes bytes_result = 2;

    // When executing requests to the ingress using JSON, you can pass a json_result directly for ease of use.
    // json_result will be sent back to the awakeable as string encoded JSON, not as Protobuf value.
    google.protobuf.Value json_result = 3;
  }
}

message RejectAwakeableRequest {
  // Base64 encoded identifier of the Awakeable to reject.
  string id = 1;

  // Rejection reason.
  string reason = 2;
}