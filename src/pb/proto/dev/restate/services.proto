// Copyright (c) 2023 - Restate Software, Inc., Restate GmbH
//
// This file is part of the Restate service protocol, which is
// released under the MIT license.
//
// You can find a copy of the license in file LICENSE in the root
// directory of this repository or package, or at
// https://github.com/restatedev/proto/blob/main/LICENSE

syntax = "proto3";

// Restate built-in services.
// This package contains the definition of Restate built-in services.
// To invoke them, check out the documentation: https://docs.restate.dev/services/invocation
package dev.restate;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";

option java_multiple_files = true;
option java_package = "dev.restate.generated";
option go_package = "restate.dev/sdk-go/pb";

service Ingress {
  // Invoke a service and don't wait for the response.
  // It is guaranteed that the service will be invoked after this method returns.
  rpc Invoke(InvokeRequest) returns (InvokeResponse);
}

message InvokeRequest {
  // Fully qualified name of the service, e.g. `counter.Counter`
  string service = 1;

  // Method name of the service to invoke, e.g. `Add`
  string method = 2;

  // Argument of the invocation.
  // You can pass the invocation argument either as protobuf or as JSON.
  // In case of JSON, the argument will be automatically transcoded to protobuf before sending it to the target service.
  oneof argument {
    bytes pb = 3;
    google.protobuf.Struct json = 4 [json_name = "argument"];
  }
}

message InvokeResponse {
  // Generated unique invocation identifier.
  // It can be used to retrieve the status of the invocation and cancel it.
  string id = 1;
}

service Awakeables {
  // Resolve an Awakeable with a result value.
  rpc Resolve(ResolveAwakeableRequest) returns (google.protobuf.Empty);
  // Reject an Awakeable with a reason.
  rpc Reject(RejectAwakeableRequest) returns (google.protobuf.Empty);
}

message ResolveAwakeableRequest {
  // Base64 encoded identifier of the Awakeable to resolve.
  string id = 1;

  oneof result {
    bytes bytes_result = 2;

    // When executing requests to the ingress using JSON, you can pass a json_result directly for ease of use.
    // json_result will be sent back to the awakeable as string encoded JSON, not as Protobuf value.
    google.protobuf.Value json_result = 3;
  }
}

message RejectAwakeableRequest {
  // Base64 encoded identifier of the Awakeable to reject.
  string id = 1;

  // Rejection reason.
  string reason = 2;
}