[package]
name = "restate_service_protocol"
version.workspace = true
authors.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
publish = false

[features]
default = []
protocol = []
message = ["protocol", "dep:restate_common", "dep:bytes-utils", "dep:codederror", "dep:restate_errors", "dep:size", "dep:tracing"]
codec = ["protocol", "dep:restate_common", "dep:thiserror", "dep:paste"]
discovery = ["dep:thiserror", "dep:codederror", "dep:restate_errors", "dep:restate_service_key_extractor", "dep:hyper", "dep:hyper-rustls", "dep:prost-reflect", "dep:restate_common", "dep:restate_hyper_util", "dep:restate_service_metadata"]

[dependencies]
bytes = { workspace = true }
bytes-utils = { workspace = true, optional = true }
prost = { workspace = true }
prost-types = { workspace = true }

thiserror = { workspace = true, optional = true }

paste = { workspace = true, optional = true }
tracing = { workspace = true, optional = true }

restate_service_key_extractor = { workspace = true, optional = true }
hyper = { workspace = true, features = ["http1", "http2", "client", "tcp", "runtime"], optional = true }
hyper-rustls = { workspace = true, optional = true }
restate_common = { workspace = true, optional = true }
prost-reflect = { workspace = true, optional = true }
restate_service_metadata = { workspace = true, optional = true }
codederror = { workspace = true, optional = true }
restate_errors = { workspace = true, optional = true }
restate_hyper_util = { workspace = true, optional = true }

size = { version = "0.4.1", optional = true }

[dev-dependencies]
restate_test_util = { workspace = true }
tracing-subscriber = { workspace = true }
tokio = { workspace = true }
uuid = { workspace = true }

[build-dependencies]
prost-build = { workspace = true }
